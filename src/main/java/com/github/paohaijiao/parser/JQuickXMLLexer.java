package com.github.paohaijiao.parser;// Generated from D:/idea/jthornruleGrammer/xml/JQuickXMLLexer.g4 by ANTLR 4.13.2

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class JQuickXMLLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT=1, CDATA=2, DOCTYPE=3, DTD=4, EntityRef=5, CharRef=6, SEA_WS=7, 
		OPEN=8, XMLDeclOpen=9, TEXT=10, CLOSE=11, SPECIAL_CLOSE=12, SLASH_CLOSE=13, 
		SLASH=14, EQUALS=15, STRING=16, Name=17, S=18, PI=19;
	public static final int
		INSIDE=1, PROC_INSTR=2;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "INSIDE", "PROC_INSTR"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"COMMENT", "CDATA", "DOCTYPE", "DTD", "EntityRef", "CharRef", "SEA_WS", 
			"OPEN", "XMLDeclOpen", "SPECIAL_OPEN", "TEXT", "CLOSE", "SPECIAL_CLOSE", 
			"SLASH_CLOSE", "SLASH", "EQUALS", "STRING", "Name", "S", "HEXDIGIT", 
			"DIGIT", "NameChar", "NameStartChar", "PI", "IGNORE"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, "'<'", null, null, "'>'", 
			null, "'/>'", "'/'", "'='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "COMMENT", "CDATA", "DOCTYPE", "DTD", "EntityRef", "CharRef", "SEA_WS", 
			"OPEN", "XMLDeclOpen", "TEXT", "CLOSE", "SPECIAL_CLOSE", "SLASH_CLOSE", 
			"SLASH", "EQUALS", "STRING", "Name", "S", "PI"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public JQuickXMLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "JQuickXMLLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0013\u00fc\u0006\uffff\uffff\u0006\uffff\uffff\u0006\uffff"+
		"\uffff\u0002\u0000\u0007\u0000\u0002\u0001\u0007\u0001\u0002\u0002\u0007"+
		"\u0002\u0002\u0003\u0007\u0003\u0002\u0004\u0007\u0004\u0002\u0005\u0007"+
		"\u0005\u0002\u0006\u0007\u0006\u0002\u0007\u0007\u0007\u0002\b\u0007\b"+
		"\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b\u0007\u000b\u0002\f\u0007"+
		"\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002\u000f\u0007\u000f\u0002"+
		"\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002\u0012\u0007\u0012\u0002"+
		"\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002\u0015\u0007\u0015\u0002"+
		"\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002\u0018\u0007\u0018\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0005"+
		"\u0000<\b\u0000\n\u0000\f\u0000?\t\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0005\u0001P\b\u0001\n\u0001\f\u0001S\t\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0005\u0002d\b\u0002\n\u0002\f\u0002g\t\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0005\u0003p\b\u0003\n\u0003\f\u0003s\t\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0004\u0005\u0081"+
		"\b\u0005\u000b\u0005\f\u0005\u0082\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0004\u0005\u008c\b\u0005"+
		"\u000b\u0005\f\u0005\u008d\u0001\u0005\u0001\u0005\u0003\u0005\u0092\b"+
		"\u0005\u0001\u0006\u0001\u0006\u0003\u0006\u0096\b\u0006\u0001\u0006\u0004"+
		"\u0006\u0099\b\u0006\u000b\u0006\f\u0006\u009a\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\n\u0004\n\u00b4\b\n\u000b\n\f\n\u00b5"+
		"\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001"+
		"\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0005\u0010"+
		"\u00cc\b\u0010\n\u0010\f\u0010\u00cf\t\u0010\u0001\u0010\u0001\u0010\u0001"+
		"\u0010\u0005\u0010\u00d4\b\u0010\n\u0010\f\u0010\u00d7\t\u0010\u0001\u0010"+
		"\u0003\u0010\u00da\b\u0010\u0001\u0011\u0001\u0011\u0005\u0011\u00de\b"+
		"\u0011\n\u0011\f\u0011\u00e1\t\u0011\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0003\u0015\u00ef\b\u0015\u0001\u0016"+
		"\u0003\u0016\u00f2\b\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0004=Qe"+
		"q\u0000\u0019\u0003\u0001\u0005\u0002\u0007\u0003\t\u0004\u000b\u0005"+
		"\r\u0006\u000f\u0007\u0011\b\u0013\t\u0015\u0000\u0017\n\u0019\u000b\u001b"+
		"\f\u001d\r\u001f\u000e!\u000f#\u0010%\u0011\'\u0012)\u0000+\u0000-\u0000"+
		"/\u00001\u00133\u0000\u0003\u0000\u0001\u0002\t\u0002\u0000\t\t  \u0002"+
		"\u0000&&<<\u0002\u0000\"\"<<\u0002\u0000\'\'<<\u0003\u0000\t\n\r\r  \u0003"+
		"\u000009AFaf\u0001\u000009\u0003\u0000\u00b7\u00b7\u0300\u036f\u203f\u2040"+
		"\t\u0000::AZ__az\u2070\u218f\u2c00\u2fef\u3001\u8000\ud7ff\u8000\uf900"+
		"\u8000\ufdcf\u8000\ufdf0\u8000\ufffd\u0107\u0000\u0003\u0001\u0000\u0000"+
		"\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000"+
		"\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000"+
		"\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000"+
		"\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000"+
		"\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0001"+
		"\u0019\u0001\u0000\u0000\u0000\u0001\u001b\u0001\u0000\u0000\u0000\u0001"+
		"\u001d\u0001\u0000\u0000\u0000\u0001\u001f\u0001\u0000\u0000\u0000\u0001"+
		"!\u0001\u0000\u0000\u0000\u0001#\u0001\u0000\u0000\u0000\u0001%\u0001"+
		"\u0000\u0000\u0000\u0001\'\u0001\u0000\u0000\u0000\u00021\u0001\u0000"+
		"\u0000\u0000\u00023\u0001\u0000\u0000\u0000\u00035\u0001\u0000\u0000\u0000"+
		"\u0005D\u0001\u0000\u0000\u0000\u0007X\u0001\u0000\u0000\u0000\tk\u0001"+
		"\u0000\u0000\u0000\u000bx\u0001\u0000\u0000\u0000\r\u0091\u0001\u0000"+
		"\u0000\u0000\u000f\u0098\u0001\u0000\u0000\u0000\u0011\u009c\u0001\u0000"+
		"\u0000\u0000\u0013\u00a0\u0001\u0000\u0000\u0000\u0015\u00aa\u0001\u0000"+
		"\u0000\u0000\u0017\u00b3\u0001\u0000\u0000\u0000\u0019\u00b7\u0001\u0000"+
		"\u0000\u0000\u001b\u00bb\u0001\u0000\u0000\u0000\u001d\u00c0\u0001\u0000"+
		"\u0000\u0000\u001f\u00c5\u0001\u0000\u0000\u0000!\u00c7\u0001\u0000\u0000"+
		"\u0000#\u00d9\u0001\u0000\u0000\u0000%\u00db\u0001\u0000\u0000\u0000\'"+
		"\u00e2\u0001\u0000\u0000\u0000)\u00e6\u0001\u0000\u0000\u0000+\u00e8\u0001"+
		"\u0000\u0000\u0000-\u00ee\u0001\u0000\u0000\u0000/\u00f1\u0001\u0000\u0000"+
		"\u00001\u00f3\u0001\u0000\u0000\u00003\u00f8\u0001\u0000\u0000\u00005"+
		"6\u0005<\u0000\u000067\u0005!\u0000\u000078\u0005-\u0000\u000089\u0005"+
		"-\u0000\u00009=\u0001\u0000\u0000\u0000:<\t\u0000\u0000\u0000;:\u0001"+
		"\u0000\u0000\u0000<?\u0001\u0000\u0000\u0000=>\u0001\u0000\u0000\u0000"+
		"=;\u0001\u0000\u0000\u0000>@\u0001\u0000\u0000\u0000?=\u0001\u0000\u0000"+
		"\u0000@A\u0005-\u0000\u0000AB\u0005-\u0000\u0000BC\u0005>\u0000\u0000"+
		"C\u0004\u0001\u0000\u0000\u0000DE\u0005<\u0000\u0000EF\u0005!\u0000\u0000"+
		"FG\u0005[\u0000\u0000GH\u0005C\u0000\u0000HI\u0005D\u0000\u0000IJ\u0005"+
		"A\u0000\u0000JK\u0005T\u0000\u0000KL\u0005A\u0000\u0000LM\u0005[\u0000"+
		"\u0000MQ\u0001\u0000\u0000\u0000NP\t\u0000\u0000\u0000ON\u0001\u0000\u0000"+
		"\u0000PS\u0001\u0000\u0000\u0000QR\u0001\u0000\u0000\u0000QO\u0001\u0000"+
		"\u0000\u0000RT\u0001\u0000\u0000\u0000SQ\u0001\u0000\u0000\u0000TU\u0005"+
		"]\u0000\u0000UV\u0005]\u0000\u0000VW\u0005>\u0000\u0000W\u0006\u0001\u0000"+
		"\u0000\u0000XY\u0005<\u0000\u0000YZ\u0005!\u0000\u0000Z[\u0005D\u0000"+
		"\u0000[\\\u0005O\u0000\u0000\\]\u0005C\u0000\u0000]^\u0005T\u0000\u0000"+
		"^_\u0005Y\u0000\u0000_`\u0005P\u0000\u0000`a\u0005E\u0000\u0000ae\u0001"+
		"\u0000\u0000\u0000bd\t\u0000\u0000\u0000cb\u0001\u0000\u0000\u0000dg\u0001"+
		"\u0000\u0000\u0000ef\u0001\u0000\u0000\u0000ec\u0001\u0000\u0000\u0000"+
		"fh\u0001\u0000\u0000\u0000ge\u0001\u0000\u0000\u0000hi\u0005]\u0000\u0000"+
		"ij\u0005>\u0000\u0000j\b\u0001\u0000\u0000\u0000kl\u0005<\u0000\u0000"+
		"lm\u0005!\u0000\u0000mq\u0001\u0000\u0000\u0000np\t\u0000\u0000\u0000"+
		"on\u0001\u0000\u0000\u0000ps\u0001\u0000\u0000\u0000qr\u0001\u0000\u0000"+
		"\u0000qo\u0001\u0000\u0000\u0000rt\u0001\u0000\u0000\u0000sq\u0001\u0000"+
		"\u0000\u0000tu\u0005>\u0000\u0000uv\u0001\u0000\u0000\u0000vw\u0006\u0003"+
		"\u0000\u0000w\n\u0001\u0000\u0000\u0000xy\u0005&\u0000\u0000yz\u0003%"+
		"\u0011\u0000z{\u0005;\u0000\u0000{\f\u0001\u0000\u0000\u0000|}\u0005&"+
		"\u0000\u0000}~\u0005#\u0000\u0000~\u0080\u0001\u0000\u0000\u0000\u007f"+
		"\u0081\u0003+\u0014\u0000\u0080\u007f\u0001\u0000\u0000\u0000\u0081\u0082"+
		"\u0001\u0000\u0000\u0000\u0082\u0080\u0001\u0000\u0000\u0000\u0082\u0083"+
		"\u0001\u0000\u0000\u0000\u0083\u0084\u0001\u0000\u0000\u0000\u0084\u0085"+
		"\u0005;\u0000\u0000\u0085\u0092\u0001\u0000\u0000\u0000\u0086\u0087\u0005"+
		"&\u0000\u0000\u0087\u0088\u0005#\u0000\u0000\u0088\u0089\u0005x\u0000"+
		"\u0000\u0089\u008b\u0001\u0000\u0000\u0000\u008a\u008c\u0003)\u0013\u0000"+
		"\u008b\u008a\u0001\u0000\u0000\u0000\u008c\u008d\u0001\u0000\u0000\u0000"+
		"\u008d\u008b\u0001\u0000\u0000\u0000\u008d\u008e\u0001\u0000\u0000\u0000"+
		"\u008e\u008f\u0001\u0000\u0000\u0000\u008f\u0090\u0005;\u0000\u0000\u0090"+
		"\u0092\u0001\u0000\u0000\u0000\u0091|\u0001\u0000\u0000\u0000\u0091\u0086"+
		"\u0001\u0000\u0000\u0000\u0092\u000e\u0001\u0000\u0000\u0000\u0093\u0099"+
		"\u0007\u0000\u0000\u0000\u0094\u0096\u0005\r\u0000\u0000\u0095\u0094\u0001"+
		"\u0000\u0000\u0000\u0095\u0096\u0001\u0000\u0000\u0000\u0096\u0097\u0001"+
		"\u0000\u0000\u0000\u0097\u0099\u0005\n\u0000\u0000\u0098\u0093\u0001\u0000"+
		"\u0000\u0000\u0098\u0095\u0001\u0000\u0000\u0000\u0099\u009a\u0001\u0000"+
		"\u0000\u0000\u009a\u0098\u0001\u0000\u0000\u0000\u009a\u009b\u0001\u0000"+
		"\u0000\u0000\u009b\u0010\u0001\u0000\u0000\u0000\u009c\u009d\u0005<\u0000"+
		"\u0000\u009d\u009e\u0001\u0000\u0000\u0000\u009e\u009f\u0006\u0007\u0001"+
		"\u0000\u009f\u0012\u0001\u0000\u0000\u0000\u00a0\u00a1\u0005<\u0000\u0000"+
		"\u00a1\u00a2\u0005?\u0000\u0000\u00a2\u00a3\u0005x\u0000\u0000\u00a3\u00a4"+
		"\u0005m\u0000\u0000\u00a4\u00a5\u0005l\u0000\u0000\u00a5\u00a6\u0001\u0000"+
		"\u0000\u0000\u00a6\u00a7\u0003\'\u0012\u0000\u00a7\u00a8\u0001\u0000\u0000"+
		"\u0000\u00a8\u00a9\u0006\b\u0001\u0000\u00a9\u0014\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ab\u0005<\u0000\u0000\u00ab\u00ac\u0005?\u0000\u0000\u00ac\u00ad"+
		"\u0001\u0000\u0000\u0000\u00ad\u00ae\u0003%\u0011\u0000\u00ae\u00af\u0001"+
		"\u0000\u0000\u0000\u00af\u00b0\u0006\t\u0002\u0000\u00b0\u00b1\u0006\t"+
		"\u0003\u0000\u00b1\u0016\u0001\u0000\u0000\u0000\u00b2\u00b4\b\u0001\u0000"+
		"\u0000\u00b3\u00b2\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001\u0000\u0000"+
		"\u0000\u00b5\u00b3\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000\u0000"+
		"\u0000\u00b6\u0018\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005>\u0000\u0000"+
		"\u00b8\u00b9\u0001\u0000\u0000\u0000\u00b9\u00ba\u0006\u000b\u0004\u0000"+
		"\u00ba\u001a\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005?\u0000\u0000\u00bc"+
		"\u00bd\u0005>\u0000\u0000\u00bd\u00be\u0001\u0000\u0000\u0000\u00be\u00bf"+
		"\u0006\f\u0004\u0000\u00bf\u001c\u0001\u0000\u0000\u0000\u00c0\u00c1\u0005"+
		"/\u0000\u0000\u00c1\u00c2\u0005>\u0000\u0000\u00c2\u00c3\u0001\u0000\u0000"+
		"\u0000\u00c3\u00c4\u0006\r\u0004\u0000\u00c4\u001e\u0001\u0000\u0000\u0000"+
		"\u00c5\u00c6\u0005/\u0000\u0000\u00c6 \u0001\u0000\u0000\u0000\u00c7\u00c8"+
		"\u0005=\u0000\u0000\u00c8\"\u0001\u0000\u0000\u0000\u00c9\u00cd\u0005"+
		"\"\u0000\u0000\u00ca\u00cc\b\u0002\u0000\u0000\u00cb\u00ca\u0001\u0000"+
		"\u0000\u0000\u00cc\u00cf\u0001\u0000\u0000\u0000\u00cd\u00cb\u0001\u0000"+
		"\u0000\u0000\u00cd\u00ce\u0001\u0000\u0000\u0000\u00ce\u00d0\u0001\u0000"+
		"\u0000\u0000\u00cf\u00cd\u0001\u0000\u0000\u0000\u00d0\u00da\u0005\"\u0000"+
		"\u0000\u00d1\u00d5\u0005\'\u0000\u0000\u00d2\u00d4\b\u0003\u0000\u0000"+
		"\u00d3\u00d2\u0001\u0000\u0000\u0000\u00d4\u00d7\u0001\u0000\u0000\u0000"+
		"\u00d5\u00d3\u0001\u0000\u0000\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000"+
		"\u00d6\u00d8\u0001\u0000\u0000\u0000\u00d7\u00d5\u0001\u0000\u0000\u0000"+
		"\u00d8\u00da\u0005\'\u0000\u0000\u00d9\u00c9\u0001\u0000\u0000\u0000\u00d9"+
		"\u00d1\u0001\u0000\u0000\u0000\u00da$\u0001\u0000\u0000\u0000\u00db\u00df"+
		"\u0003/\u0016\u0000\u00dc\u00de\u0003-\u0015\u0000\u00dd\u00dc\u0001\u0000"+
		"\u0000\u0000\u00de\u00e1\u0001\u0000\u0000\u0000\u00df\u00dd\u0001\u0000"+
		"\u0000\u0000\u00df\u00e0\u0001\u0000\u0000\u0000\u00e0&\u0001\u0000\u0000"+
		"\u0000\u00e1\u00df\u0001\u0000\u0000\u0000\u00e2\u00e3\u0007\u0004\u0000"+
		"\u0000\u00e3\u00e4\u0001\u0000\u0000\u0000\u00e4\u00e5\u0006\u0012\u0000"+
		"\u0000\u00e5(\u0001\u0000\u0000\u0000\u00e6\u00e7\u0007\u0005\u0000\u0000"+
		"\u00e7*\u0001\u0000\u0000\u0000\u00e8\u00e9\u0007\u0006\u0000\u0000\u00e9"+
		",\u0001\u0000\u0000\u0000\u00ea\u00ef\u0003/\u0016\u0000\u00eb\u00ef\u0002"+
		"-.\u0000\u00ec\u00ef\u0003+\u0014\u0000\u00ed\u00ef\u0007\u0007\u0000"+
		"\u0000\u00ee\u00ea\u0001\u0000\u0000\u0000\u00ee\u00eb\u0001\u0000\u0000"+
		"\u0000\u00ee\u00ec\u0001\u0000\u0000\u0000\u00ee\u00ed\u0001\u0000\u0000"+
		"\u0000\u00ef.\u0001\u0000\u0000\u0000\u00f0\u00f2\u0007\b\u0000\u0000"+
		"\u00f1\u00f0\u0001\u0000\u0000\u0000\u00f20\u0001\u0000\u0000\u0000\u00f3"+
		"\u00f4\u0005?\u0000\u0000\u00f4\u00f5\u0005>\u0000\u0000\u00f5\u00f6\u0001"+
		"\u0000\u0000\u0000\u00f6\u00f7\u0006\u0017\u0004\u0000\u00f72\u0001\u0000"+
		"\u0000\u0000\u00f8\u00f9\t\u0000\u0000\u0000\u00f9\u00fa\u0001\u0000\u0000"+
		"\u0000\u00fa\u00fb\u0006\u0018\u0002\u0000\u00fb4\u0001\u0000\u0000\u0000"+
		"\u0014\u0000\u0001\u0002=Qeq\u0082\u008d\u0091\u0095\u0098\u009a\u00b5"+
		"\u00cd\u00d5\u00d9\u00df\u00ee\u00f1\u0005\u0006\u0000\u0000\u0005\u0001"+
		"\u0000\u0003\u0000\u0000\u0005\u0002\u0000\u0004\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}